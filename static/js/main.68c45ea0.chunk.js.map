{"version":3,"sources":["components/Drawer.tsx","components/Viewer.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Drawer","canvasRef","useRef","darkness","lineWidth","mouseDown","start","x","y","end","ratio","clearCanvas","ctx","current","getContext","fillStyle","fillRect","canvas","width","height","useEffect","className","styles","container","id","ref","onMouseDown","e","rect","getBoundingClientRect","clientX","clientY","onMouseUp","onMouseMove","dark","beginPath","moveTo","lineTo","strokeStyle","lineCap","stroke","closePath","onMouseLeave","sliderContainer","Typography","component","Slider","size","color","valueLabelDisplay","min","max","step","defaultValue","onChange","v","Button","variant","fullWidth","onClick","css","Viewer","camera","position","fov","aspect","window","innerWidth","innerHeight","near","far","dpr","devicePixelRatio","shadows","attach","args","Stats","OrbitControls","intensity","castShadow","TexturedPlane","matRef","textureRef","datas","useControls","subdivide","value","displacementScale","wireframe","shadow","drawer","document","getElementById","texture","THREE","minFilter","magFilter","displacementMap","useFrame","needsUpdate","rotation","Math","PI","receiveShadow","side","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68c45ea0.chunk.js","sourcesContent":["import React, { useEffect, useRef, VFC } from 'react';\r\nimport { css } from '@emotion/css';\r\nimport { Button, Slider, Typography } from '@mui/material';\r\n\r\nexport const Drawer: VFC = () => {\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null)\r\n\r\n\tlet darkness = 1\r\n\tlet lineWidth = 10\r\n\tlet mouseDown = false\r\n\tlet start = { x: 0, y: 0 }\r\n\tlet end = { x: 0, y: 0 }\r\n\tconst ratio = { w: 300 / 300, h: 300 / 300 } // 解像度 / Canvas Size(pixel)\r\n\r\n\tconst clearCanvas = () => {\r\n\t\tconst ctx = canvasRef.current!.getContext('2d')!\r\n\t\tctx.fillStyle = '#000'\r\n\t\tctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tclearCanvas()\r\n\t}, [])\r\n\r\n\tconst handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n\t\tmouseDown = true\r\n\t\tconst rect = canvasRef.current!.getBoundingClientRect()\r\n\t\tstart = { x: e.clientX - rect.x, y: e.clientY - rect.y }\r\n\t\tend = { x: e.clientX - rect.x, y: e.clientY - rect.y }\r\n\t}\r\n\r\n\tconst handleMouseUp = () => {\r\n\t\tmouseDown = false\r\n\t}\r\n\r\n\tconst handleMouseLeave = () => {\r\n\t\tmouseDown = false\r\n\t}\r\n\r\n\tconst handleMouseMove = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n\t\tif (mouseDown) {\r\n\t\t\tconst ctx = canvasRef.current!.getContext('2d')!\r\n\t\t\tconst rect = canvasRef.current!.getBoundingClientRect()\r\n\r\n\t\t\tstart = { x: end.x, y: end.y }\r\n\t\t\tend = { x: e.clientX - rect.x, y: e.clientY - rect.y }\r\n\r\n\t\t\tconst dark = 255 * darkness\r\n\r\n\t\t\t// Draw our path\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(start.x * ratio.w, start.y * ratio.h)\r\n\t\t\tctx.lineTo(end.x * ratio.w, end.y * ratio.h)\r\n\t\t\tctx.strokeStyle = `rgb(${dark}, ${dark}, ${dark})`\r\n\t\t\tctx.lineWidth = lineWidth\r\n\t\t\tctx.lineCap = 'round'\r\n\t\t\tctx.stroke()\r\n\t\t\tctx.closePath()\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleClearClick = () => {\r\n\t\tclearCanvas()\r\n\t}\r\n\r\n\tconst handleDarknessChange = (e: Event, v: number | number[]) => {\r\n\t\tdarkness = v as number\r\n\t}\r\n\r\n\tconst handleLineWidthChange = (e: Event, v: number | number[]) => {\r\n\t\tlineWidth = v as number\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{/* canvas */}\r\n\t\t\t<canvas\r\n\t\t\t\tid=\"drawer\"\r\n\t\t\t\tref={canvasRef}\r\n\t\t\t\tclassName={styles.canvas}\r\n\t\t\t\twidth={300}\r\n\t\t\t\theight={300}\r\n\t\t\t\tonMouseDown={handleMouseDown}\r\n\t\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\t\tonMouseMove={handleMouseMove}\r\n\t\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t\t/>\r\n\t\t\t{/* controls */}\r\n\t\t\t<div className={styles.sliderContainer}>\r\n\t\t\t\t<Typography component=\"div\">Darkness</Typography>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\tmin={0}\r\n\t\t\t\t\tmax={1}\r\n\t\t\t\t\tstep={0.1}\r\n\t\t\t\t\tdefaultValue={1}\r\n\t\t\t\t\tonChange={handleDarknessChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.sliderContainer}>\r\n\t\t\t\t<Typography component=\"div\">LineWidth</Typography>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\tmin={5}\r\n\t\t\t\t\tmax={20}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tdefaultValue={10}\r\n\t\t\t\t\tonChange={handleLineWidthChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={handleClearClick}>\r\n\t\t\t\tClear\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ==============================================\r\nconst styles = {\r\n\tcontainer: css`\r\n\t\tposition: relative;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: rgba(0, 109, 176, 0.1);\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tborder-radius: 10px;\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-rows: auto auto auto auto;\r\n\t\tgrid-gap: 10px;\r\n\t`,\r\n\tcanvas: css`\r\n\t\twidth: 300px;\r\n\t\theight: 300px;\r\n\t`,\r\n\tsliderContainer: css`\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tgrid-gap: 10px;\r\n\t\tcolor: #fff;\r\n\t`\r\n}\r\n","import { useControls } from 'leva';\r\nimport React, { useEffect, useRef, VFC } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls, Plane, Stats } from '@react-three/drei';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\n\r\nexport const Viewer: VFC = () => {\r\n\treturn (\r\n\t\t<Canvas\r\n\t\t\tcamera={{\r\n\t\t\t\tposition: [0, 20, 5],\r\n\t\t\t\tfov: 50,\r\n\t\t\t\taspect: window.innerWidth / window.innerHeight,\r\n\t\t\t\tnear: 0.1,\r\n\t\t\t\tfar: 2000\r\n\t\t\t}}\r\n\t\t\tdpr={window.devicePixelRatio}\r\n\t\t\tshadows>\r\n\t\t\t{/* canvas color */}\r\n\t\t\t<color attach=\"background\" args={['#1e1e1e']} />\r\n\t\t\t{/* fps */}\r\n\t\t\t<Stats />\r\n\t\t\t{/* camera controller */}\r\n\t\t\t<OrbitControls attach=\"orbitControls\" />\r\n\t\t\t{/* lights */}\r\n\t\t\t<ambientLight intensity={0.1} />\r\n\t\t\t<directionalLight\r\n\t\t\t\tposition={[10, 10, 10]}\r\n\t\t\t\tintensity={1}\r\n\t\t\t\tcastShadow\r\n\t\t\t\tshadow-mapSize-width={2048}\r\n\t\t\t\tshadow-mapSize-height={2048}\r\n\t\t\t\tshadow-camera-near={0.1}\r\n\t\t\t\tshadow-camera-far={40}\r\n\t\t\t\tshadow-camera-top={10}\r\n\t\t\t\tshadow-camera-bottom={-10}\r\n\t\t\t\tshadow-camera-left={-15}\r\n\t\t\t\tshadow-camera-right={15}\r\n\t\t\t\tshadow-bias={-0.003}\r\n\t\t\t/>\r\n\t\t\t{/* objects */}\r\n\t\t\t<TexturedPlane />\r\n\t\t\t{/* helper */}\r\n\t\t\t{/* <axesHelper /> */}\r\n\t\t</Canvas>\r\n\t)\r\n}\r\n\r\nconst TexturedPlane: VFC = () => {\r\n\tconst matRef = useRef<THREE.MeshPhongMaterial>(null)\r\n\tconst textureRef = useRef<THREE.Texture>()\r\n\r\n\tconst datas = useControls({\r\n\t\tcolor: '#2694ab',\r\n\t\tsubdivide: {\r\n\t\t\tvalue: 300,\r\n\t\t\tmin: 50,\r\n\t\t\tmax: 500,\r\n\t\t\tstep: 10\r\n\t\t},\r\n\t\tdisplacementScale: {\r\n\t\t\tvalue: 5,\r\n\t\t\tmin: 0.1,\r\n\t\t\tmax: 5,\r\n\t\t\tstep: 0.1\r\n\t\t},\r\n\t\twireframe: true,\r\n\t\tshadow: false\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tconst drawer = document.getElementById('drawer')\r\n\t\tif (drawer) {\r\n\t\t\tconst canvas = drawer as HTMLCanvasElement\r\n\t\t\tconst texture = new THREE.Texture(canvas)\r\n\t\t\ttexture.minFilter = THREE.LinearFilter\r\n\t\t\ttexture.magFilter = THREE.LinearFilter\r\n\t\t\tmatRef.current!.displacementMap = texture\r\n\t\t\ttextureRef.current = texture\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseFrame(() => {\r\n\t\tif (textureRef.current) {\r\n\t\t\ttextureRef.current.needsUpdate = true\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Plane\r\n\t\t\trotation={[-Math.PI / 2, 0, 0]}\r\n\t\t\targs={[20, 20, datas.subdivide, datas.subdivide]}\r\n\t\t\tcastShadow={datas.shadow}\r\n\t\t\treceiveShadow>\r\n\t\t\t<meshPhongMaterial ref={matRef} {...datas} side={THREE.DoubleSide} />\r\n\t\t</Plane>\r\n\t)\r\n}\r\n","import React, { VFC } from 'react';\nimport { css } from '@emotion/css';\nimport { Drawer } from './Drawer';\nimport { Viewer } from './Viewer';\n\nexport const App: VFC = () => {\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Viewer />\n\t\t\t<div className={styles.drawer}>\n\t\t\t\t<Drawer />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst styles = {\n\tcontainer: css`\n\t\tposition: relative;\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t`,\n\tdrawer: css`\n\t\tposition: absolute;\n\t\tbottom: 20px;\n\t\tleft: 20px;\n\t\tline-height: 0;\n\t`\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}